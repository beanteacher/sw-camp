<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ohgiraffers.section01.xml.DynamicSqlMapper">
    <select id="selectMenuByPrice" resultType="MenuDTO">
        SELECT
            MENU_CODE
            , MENU_NAME
            , MENU_PRICE
            , CATEGORY_CODE
            , ORDERABLE_STATUS
        FROM TBL_MENU
        WHERE ORDERABLE_STATUS = 'Y'
        <if test="price gt 0 &amp;&amp; price lte 10000">
            AND MENU_PRICE &lt; #{price}
        </if>
        <if test="price gt 10000 &amp;&amp; price lte 20000">
            AND MENU_PRICE BETWEEN 10000 AND #{price}
        </if>
        <if test="price gt 20000 &amp;&amp; price lte 30000">
            AND MENU_PRICE BETWEEN 20000 AND #{price}
        </if>
        <if test="price gt 30000">
            AND MENU_PRICE BETWEEN 30000 AND #{price}
        </if>
        ORDER BY MENU_CODE
    </select>

    <select id="searchMenu" parameterType="SearchCriteria" resultType="MenuDTO">
        SELECT
            MENU_CODE
            , MENU_NAME
            , MENU_PRICE
            , CATEGORY_CODE
            , ORDERABLE_STATUS
        FROM TBL_MENU A
        <if test="condition == 'category'">
            JOIN TBL_CATEGORY B
            ON A.CATEGORY_CODE = B.CATEGORY_CODE
        </if>
        WHERE ORDERABLE_STATUS = 'Y'
        <if test="condition == 'name'">
            AND MENU_NAME LIKE CONCAT('%', #{value}, '%')
        </if>
        <if test="condition == 'category'">
            AND CATEGORY_NAME = #{value}
        </if>
        ORDER BY MENU_CODE
    </select>

    <select id="searchMenuBySubCategory" parameterType="SearchCriteria" resultType="MenuDTO">
        SELECT
            MENU_CODE
            , MENU_NAME
            , MENU_PRICE
            , A.CATEGORY_CODE
            , ORDERABLE_STATUS
        FROM TBL_MENU A
        JOIN TBL_CATEGORY B
            ON A.CATEGORY_CODE = B.CATEGORY_CODE
        WHERE ORDERABLE_STATUS = 'Y'
        <choose>
            <when test="value== '식사'">
                AND REF_CATEGORY_CODE = (SELECT CATEGORY_CODE FROM TBL_CATEGORY WHERE CATEGORY_NAME = '식사')
            </when>
            <when test="value== '음료'">
                AND REF_CATEGORY_CODE = (SELECT CATEGORY_CODE FROM TBL_CATEGORY WHERE CATEGORY_NAME = '음료')
            </when>
            <otherwise>
                AND REF_CATEGORY_CODE = (SELECT CATEGORY_CODE FROM TBL_CATEGORY WHERE CATEGORY_NAME = '디저트')
            </otherwise>
        </choose>
        ORDER BY MENU_CODE
    </select>

    <select id="searchMenuByRandomMenuCode" resultType="MenuDTO">
        SELECT
            MENU_CODE
            , MENU_NAME
            , MENU_PRICE
            , CATEGORY_CODE
            , ORDERABLE_STATUS
        FROM TBL_MENU
        WHERE MENU_CODE IN
        <!--
            collection : 반복을 수행할 대상
            item : 반복을 수행할 때마다 꺼내올 값의 이름 설정
            open 반복문 구문의 가장 앞에 올 문자
            separator : 반복이 수행될 때 꺼내 온 item 사이에 들어갈 문자
            close : 반복문 구문의 가장 마지막에 올 문자
         -->
        <foreach collection="list" item="menuCode" open="(" separator="," close=")">
            #{menuCode}
        </foreach>
    </select>


    <select id="searchMenuByNameOrCategory" resultType="MenuDTO">
        SELECT
            MENU_CODE
            , MENU_NAME
            , MENU_PRICE
            , CATEGORY_CODE
            , ORDERABLE_STATUS
        FROM TBL_MENU
        <!--
            해결 방법 1. where 태그 사용
            (1) 구문이 where 로 시작하지 않으면 자동으로 where을 붙여준다.
            (2) 태그 내부에 쿼리문이 추가되지 않으면 where을 작성하지 않는다.
            (3) 구문이 AND나 OR로 시작하면 자동으로 해당 단어를 제거한다.
        -->
        <where>
            <if test="nameValue != null">
                AND MENU_NAME LIKE CONCAT('%', #{nameValue}, '%')
            </if>
            <if test="categoryValue != null">
                AND CATEGORY_CODE = #{categoryValue}
            </if>
        </where>
        <!--
            해결 방법 2. trim 태그 이용
            (1) prefix : 처리 후 엘리먼트의 내용이 있으면 붙여주는 접두사
            (2) prefixOverrides : 처리 후 내용 중 가장 앞에 해당하는 문자를 자동 삭제
            (3) suffix : 처리 후 엘리먼트 내용이 있으면 붙여주는 접미사
            (4) suffixOverrides : 처리 후 엘리먼트 가장 앞에 해당하는 문자를 자동 삭제
        -->
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="nameValue != null">
                AND MENU_NAME LIKE CONCAT('%', #{nameValue}, '%')
            </if>
            <if test="categoryValue != null">
                AND CATEGORY_CODE = #{categoryValue}
            </if>
        </trim>
    </select>

    <update id="modifyMenu">
        UPDATE TBL_MENU
        <!--
            해결 방법 1. set 태그 사용
            (1) SET 구문 작성
            (2) 앞 또는 뒤 구문의 ,  삭제

        <set>
            <if test="menuName != null &amp;&amp; menuName != ''">
                , MENU_NAME = #{menuName}
            </if>
            <if test="categoryCode != null &amp;&amp; categoryCode != 0">
                , CATEGORY_CODE = #{categoryCode}
            </if>
            <if test="orderableStatus != null &amp;&amp; orderableStatus != ''">
                , ORDERABLE_STATUS = #{orderableStatus}
            </if>
        </set>
        -->
        <!-- 해결 방법 2. trim 태그 사용 -->
        <trim prefix="SET" prefixOverrides=",">
            <if test="menuName != null &amp;&amp; menuName != ''">
                , MENU_NAME = #{menuName}
            </if>
            <if test="categoryCode != null &amp;&amp; categoryCode != 0">
                , CATEGORY_CODE = #{categoryCode}
            </if>
            <if test="orderableStatus != null &amp;&amp; orderableStatus != ''">
                , ORDERABLE_STATUS = #{orderableStatus}
            </if>
        </trim>
            WHERE MENU_CODE = #{menuCode}
    </update>
</mapper>